1. Disabling hdmi to try to decrease interference with the wifi adapter

2. blacklist wlan0 from /etc/connman/main.conf

3. /etc/network/interfaces
```
auto wlan0
iface wlan0 inet static
    address 10.69.69.2
    netmask 255.255.255.0
    network 10.69.69.0
    gateway 10.69.69.1
    metric 100 # So this does not take over the default route
```

4. Hostapd
/etc/default/hostapd
```
DAEMON_CONF="/etc/hostapd/hostapd.conf"
```

/etc/hostapd/hostapd.conf
```
debian@beaglebone:~$ cat /etc/hostapd/hostapd.conf
# the interface used by the AP
interface=wlan0
# This is needed when using the cheapo usb wifi dongle
driver=nl80211
# g simply means 2.4GHz band
hw_mode=g
# the channel to use
channel=7
# limit the frequencies used to those allowed in the country
ieee80211d=1
# the country code
country_code=US
# 802.11n support
ieee80211n=1

# the name of the AP
ssid2="Lawn Mower DAQ (TM)"
# 1=wpa, 2=wep, 3=both
auth_algs=1
# WPA2 only
wpa=2
wpa_key_mgmt=WPA-PSK
rsn_pairwise=CCMP
wpa_passphrase=LaWnMoWiNgClUb
```

5. /etc/dnsmasq.d/wlan0
```
interface=wlan0
dhcp-range=wlan0,10.69.69.100,10.69.69.200,2m
listen-address=10.69.69.2
dhcp-option=wlan0,3
dhcp-option=wlan0,6
```

6. Bring up can0
/etc/network/interfaces
```
auto can0
iface can0 inet manual
    pre-up ip link set $IFACE type can bitrate 500000 listen-only off
    up /sbin/ifconfig $IFACE up
    down /sbin/ifconfig $IFACE down
```

7. disable all the things
```
  142  sudo systemctl disable bonescript-autorun.service
  143  sudo systemctl disable bonescript.socket
  144  sudo systemctl disable cloud9.socket
  184  sudo systemctl disable node-red.socket
```

8. Map pins

/etc/config-pin.conf
```
# Specify pins to map to certain functions via the config-pin utility on boot.
#
# dcan0
P9_19 can
P9_20 can
# dcan1
P9_24 can
P9_26 can
# uart4
P9_11 uart
P9_13 uart
```

9. Setup pins to automap
/etc/systemd/system/config-pin.service
```
[Unit]
Description=Configure pins on startup for IO
After=generic-board-startup.service

[Service]
Type=oneshot
ExecStart=/usr/bin/config-pin -f /etc/config-pin.conf
TimeoutSec=1
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
```

$ sudo systemctl enable config-pin

10. Automount SD card
```
$ sudo apt-get install -y exfat-utils exfat-fuse
$ sudo mkdir /mnt/sdcard
```


/etc/fstab add
```
/dev/mmcblk0p1	/mnt/sdcard	auto	auto,rw,async,user,nofail	0	0
```

11. Add I2C to the config-pin conf
Add /etc/config-pin.conf
```
# i2c1
P9_17 i2c
P9_18 i2c
```

12. Extend config-pin timeout
/etc/systemd/system/config-pin.service
```
...
Timeout=2
...
```

13. Compile a new DTBO file
```
$ cd /opt/source/bb.org-overlays
$ git remote update
$ git checkout fe349743947df3dee4f6872e339b317b6c5bda50
```

/opt/source/bb.org-overlays/src/arm/BB-I2C1-RTC-DS1307.dts
```
/*
 * Copyright (C) 2018 Tim Small <tim@seoss.co.uk>
 *
 * Based on PB-I2C2-RTC-PCF8523.dts:
 *
 * Copyright (C) 2018 Robert Nelson <robertcnelson@gmail.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * This overlay is for a Maxim (Dallas) DS1307 RTC connected via the
 * BeagleBone's second I2C bus.
 * https://www.maximintegrated.com/en/products/digital/real-time-clocks/DS1307.html
 *
 * It was built for the South Coast Science "DFE" air quality monitoring
 * cape, but may be useful for any hardware which includes a DS1307
 *
 * https://www.southcoastscience.com/products/
 *
 * https://github.com/south-coast-science/scs_documentation/wiki/Digital-Front-End-%28DFE%29-for-BeagleBone-v1
 */

/dts-v1/;
/plugin/;

#include <dt-bindings/board/am335x-bbw-bbb-base.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/pinctrl/am33xx.h>

/ {
	fragment@0 {
		target-path="/";
		__overlay__ {
			aliases {
				rtc0 = &extrtc;
				/* The OMAP RTC implementation in the BBB is
				 * buggy, so that it cannot be used as a
				 * battery-backed RTS, so that it loses its
				 * contents when power is removed from the
				 * Beaglebone...
				 *
				 * We move the omap built-in RTC to rtc1, so
				 * that userspace defaults to using the DS1307.
				 *
				 * The omap RTC must remain enabled because it
				 * is also used during the reboot process on the
				 * BBB.
				 */
				rtc1 = "/ocp/rtc@44e3e000";
			};
		};
	};

	fragment@1 {
		target = <&i2c1>;
		__overlay__ {
			status = "okay";

			#address-cells = <1>;
			#size-cells = <0>;

			extrtc: ds1307@68 {
				compatible = "maxim,ds1307";
				reg = <0x68>; /* DS1307 has a fixed I2C addr */
			};
		};
	};
};
```

```
$ ./install.sh
```

14. Totally remove all the config-pin stuff I did before
```
$ sudo systemctl disable config-pin
$ sudo rm /etc/systemd/system/config-pin.service /etc/config-pin.conf
```

15. Load pin configs via uboot DTB loading
/boot/uEnv.txt
```
uboot_overlay_addr0=/lib/firmware/BB-CAN0-00A0.dtbo
uboot_overlay_addr1=/lib/firmware/BB-UART4-00A0.dtbo
uboot_overlay_addr2=/lib/firmware/BB-I2C1-FAST-00A0.dtbo
uboot_overlay_addr3=/lib/firmware/BB-I2C1-RTC-DS1307.dtbo
```

16. Install gpsd

With a network connection, run:
```
$ sudo apt-get install -y gpsd
```

17. Configure gpsd
```
# Default settings for the gpsd init script and the hotplug wrapper.

# Start the gpsd daemon automatically at boot time
START_DAEMON="true"

# Use USB hotplugging to add new USB devices automatically to the daemon
USBAUTO="false"

# Devices gpsd should collect to at boot time.
# They need to be read/writeable, either by user gpsd or the group dialout.
DEVICES="/dev/ttyO4 /dev/pps0"

# Other options you want to pass to gpsd
GPSD_OPTIONS="-n"
```

18. Setup PPS overlay

/opt/source/bb.org-overlays/src/arm/BB-PPS-P8_07-00A0.dts
```
/*
 * Copyright (C) 2019 John Ott <john@johnott.us>
 *
 * Virtual cape for PPS on pin P8.7
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
/dts-v1/;
/plugin/;

#include <dt-bindings/board/am335x-bbw-bbb-base.h>
#include <dt-bindings/pinctrl/am33xx.h>

/ {
	compatible = "ti,beaglebone", "ti,beaglebone-black", "ti,beaglebone-green";

	/* identification */
	part-number = "BB-PPS-P8_07";
	version = "00A0";

	/* state the resources this cape uses */
	exclusive-use =
		/* the pin header uses */
		"P8.7",	/* pps gpio2_2 */
		/* The hardware ip uses */
		"gpio2_2";

	/*
	 * Free up the pins used by the cape from the pinmux helpers.
	 */
	fragment@0 {
		target = <&ocp>;
		__overlay__ {
			P8_07_pinmux { status = "disabled"; };
		};
	};

	fragment@1 {
		target = <&am33xx_pinmux>;
		__overlay__ {
			pps_pins: pimux_pps_pins {
				pinctrl-single,pins = <
					BONE_P8_07 (PIN_INPUT | MUX_MODE7)
				>;
			};
		};
	};

	fragment@2 {
		target = <&ocp>;
		__overlay__ {
			pps {
				compatible = "pps-gpio";
				status = "okay";
				pinctrl-names = "default";
				pinctrl-0 = <&pps_pins>;

				gpios = <&gpio2 2 0>;
				assert-rising-edge;
			};
		};
	};
};
```

```
$ ./install.sh
```

19. Load PPS via uboot DTB loading
/boot/uEnv.txt
```
uboot_overlay_addr4=/lib/firmware/BB-PPS-P8_07-00A0.dtbo
```

20. Enable GSPD on boot
```
$ sudo systemctl enable gpsd
# This is needed to force system to start gpsd even when no client is connected.
$ sudo ln -s /lib/systemd/system/gpsd.service /etc/systemd/system/multi-user.target.wants/gpsd.service
```

21. Reboot
```
$ sudo reboot
```

22. Install chronyd
```
$ sudo apt-get install -y chrony
```

23. Configure chronyd to use gps as a reference

/etc/chrony/chrony.conf
```
...

# get NMEA data from gpsd over shared memory
refclock SHM 0 offset 0.395 delay 0.2 refid NMEA noselect
# get PPS data from pps-gpio, summarize every 16 seconds, prefer it
refclock PPS /dev/pps0 refid PPS poll 4 prefer
```

24. Reboot again

25. Make sure GPS works via netcat

This should result in a stream of JSON messages coming out with GPS data.
```
$ sudo apt-get install -y netcat
$ echo '?WATCH={"enable":true,"json":true}' | nc localhost 2947
```
